function y = testFilter(x)
%TESTFILTER Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.3 and DSP System Toolbox 9.5.
% Generated on: 12-Apr-2018 17:53:24

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Bandpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 250;  % Sampling Frequency
    %
    % Fstop1 = 4;               % First Stopband Frequency
    % Fpass1 = 7;               % First Passband Frequency
    % Fpass2 = 14;              % Second Passband Frequency
    % Fstop2 = 18;              % Second Stopband Frequency
    % Dstop1 = 0.031622776602;  % First Stopband Attenuation
    % Dpass  = 0.057501127785;  % Passband Ripple
    % Dstop2 = 0.031622776602;  % Second Stopband Attenuation
    % dens   = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
    %                           0], [Dstop1 Dpass Dstop2]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [-0.0211126211820386 -0.00265989050183899 ...
        -0.00246103035421282 -0.0019482227234882 -0.00107535441774313 ...
        0.000198310128324938 0.00186172535626764 0.00385460335664053 ...
        0.00603549951972721 0.00821365367176492 0.0101367868944001 ...
        0.0115580876616935 0.0122431107120216 0.0120531672225743 ...
        0.0109429920659209 0.00903199711628023 0.00654398666859 ...
        0.00385110003744838 0.00130706952195377 -0.00063175517568546 ...
        -0.00161392000401455 -0.00148057226311413 -0.000179343290416058 ...
        0.00205338220666901 0.00481663581830608 0.00750800036041754 ...
        0.00944951124798229 0.00995182490620914 0.00845228728741366 ...
        0.00459289765069623 -0.0016736263523292 -0.0100581416410168 ...
        -0.0199130982487187 -0.0302934752607782 -0.0400321790214334 ...
        -0.0478814857772521 -0.0526566547925521 -0.0534128726636729 ...
        -0.0495211169062166 -0.0408579130222647 -0.027774349928456 ...
        -0.0111398488340494 0.00774650371636895 0.0272862816289576 ...
        0.0457257564354515 0.061356507069124 0.0726967254793035 ...
        0.0786557997902336 0.0786557997902336 0.0726967254793035 ...
        0.061356507069124 0.0457257564354515 0.0272862816289576 ...
        0.00774650371636895 -0.0111398488340494 -0.027774349928456 ...
        -0.0408579130222647 -0.0495211169062166 -0.0534128726636729 ...
        -0.0526566547925521 -0.0478814857772521 -0.0400321790214334 ...
        -0.0302934752607782 -0.0199130982487187 -0.0100581416410168 ...
        -0.0016736263523292 0.00459289765069623 0.00845228728741366 ...
        0.00995182490620914 0.00944951124798229 0.00750800036041754 ...
        0.00481663581830608 0.00205338220666901 -0.000179343290416058 ...
        -0.00148057226311413 -0.00161392000401455 -0.00063175517568546 ...
        0.00130706952195377 0.00385110003744838 0.00654398666859 ...
        0.00903199711628023 0.0109429920659209 0.0120531672225743 ...
        0.0122431107120216 0.0115580876616935 0.0101367868944001 ...
        0.00821365367176492 0.00603549951972721 0.00385460335664053 ...
        0.00186172535626764 0.000198310128324938 -0.00107535441774313 ...
        -0.0019482227234882 -0.00246103035421282 -0.00265989050183899 ...
        -0.0211126211820386]);
end

y = step(Hd,double(x));


% [EOF]
